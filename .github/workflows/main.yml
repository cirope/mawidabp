name: CI
on:
  push:
    branches:
      - master
      - c-*
  pull_request:
    branches:
      - master
      - c-*
jobs:
  determine-config:
    runs-on: ubuntu-latest
    outputs:
      configs: ${{ steps.set-configs.outputs.configs }}
    steps:
      - name: Set configuration matrix
        id: set-configs
        run: |
          master_check="${{ contains(github.ref_name, 'master') || contains(github.event.pull_request.base.ref, 'master') }}"
          galicia_check="${{ contains(github.ref_name, 'galicia') || contains(github.event.pull_request.base.ref, 'galicia') }}"
          bice_check="${{ contains(github.ref_name, 'bice') || contains(github.event.pull_request.base.ref, 'bice') }}"
          hipotecario_check="${{ contains(github.ref_name, 'hipotecario') || contains(github.event.pull_request.base.ref, 'hipotecario') }}"
          patagonia_check="${{ contains(github.ref_name, 'patagonia') || contains(github.event.pull_request.base.ref, 'patagonia') }}"
          nbch_check="${{ contains(github.ref_name, 'nbch') || contains(github.event.pull_request.base.ref, 'nbch') }}"

          if $master_check; then
            echo 'configs=["normal","gal","bic","bh","cycle_score","reviews_scored_by_weakness"]' >> $GITHUB_OUTPUT
          elif $galicia_check; then
            echo 'configs=["gal"]' >> $GITHUB_OUTPUT
          elif $bice_check; then
            echo 'configs=["bic"]' >> $GITHUB_OUTPUT
          elif $hipotecario_check; then
            echo 'configs=["bh"]' >> $GITHUB_OUTPUT
          elif $patagonia_check; then
            echo 'configs=["cycle_score"]' >> $GITHUB_OUTPUT
          elif $nbch_check; then
            echo 'configs=["reviews_scored_by_weakness"]' >> $GITHUB_OUTPUT
          else
            echo 'configs=["normal"]' >> $GITHUB_OUTPUT
          fi
  test:
    needs: determine-config
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        ruby-version: [3.1]
        config-type: ${{ fromJson(needs.determine-config.outputs.configs) }}
    services:
      postgres:
        image: postgres:14
        ports:
          - '5432:5432'
        env:
          POSTGRES_DB: mawidabp_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      redis:
        image: redis
        ports:
          - '6379:6379'
        options: --entrypoint redis-server
    env:
      RAILS_ENV: test
      GH_ACTIONS: true
      DATABASE_URL: "postgres://postgres:postgres@localhost:5432/mawidabp_test"
      REDIS_URL: redis://localhost:6379/0
      RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      APP_HOST: 'lvh.me'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Update package lists
        run: sudo apt update
      - name: Install slapd and ldap-utils
        run: sudo apt -y install slapd ldap-utils
      - name: Install wkhtmltopdf
        run: sudo apt -y install wkhtmltopdf
      - name: Install and configure ImageMagick
        run: |
          sudo apt -y install imagemagick
          sudo sed -i '/PDF/s/rights="none"/rights="read|write"/' /etc/ImageMagick-6/policy.xml
      - name: Install ruby and gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: true
      - name: Migrate database
        run: bin/rails db:migrate
      - name: Copy application.yml
        run: cp config/application.${{ matrix.config-type }}.yml config/application.yml
      - name: Set up and run slpad
        run: |
          sudo cp test/fixtures/ldap/slapd.conf /etc/ldap/
          sudo slapd -f /etc/ldap/slapd.conf -h ldap://localhost:3389
          bundle exec rails ldap:reset
      - name: Run tests
        run: bin/rails test
