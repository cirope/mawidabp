<% FINDING_WARNING_EXPIRE_DAYS = 7 %>

normal_version:
  item_id: <%= ActiveRecord::FixtureSet.identify(:bare_success_login_record) %>
  item_type: LoginRecord
  event: create
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  important: false
  created_at: <%= Time.now.to_s(:db) %>

important_version:
  item_id: <%= ActiveRecord::FixtureSet.identify(:bare) %>
  item_type: User
  event: create
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  important: true
  created_at: <%= 1.hour.ago.to_s(:db) %>

important_new_version:
  item_id: <%= ActiveRecord::FixtureSet.identify(:bare) %>
  item_type: User
  event: update
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: {name: 'new_name'}
  important: true
  created_at: <%= Time.now.to_s(:db) %>

finding_being_implemented_weakness_without_extension_before_final_review:
  item_id: <%= ActiveRecord::FixtureSet.identify(:being_implemented_weakness) %>
  item_type: Finding
  event: create
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: { extension: false,
            follow_up_date: <%= (FINDING_WARNING_EXPIRE_DAYS.business_days.from_now.to_date - 9.days).to_s(:db) %>,
            state: <%= Finding::STATUS[:incomplete] %> }
  important: true
  created_at: <%= (2.days.ago.to_date - 4.days).to_s(:db) %>

finding_being_implemented_weakness_with_extension_and_awaiting_before_final_review:
  item_id: <%= ActiveRecord::FixtureSet.identify(:being_implemented_weakness) %>
  item_type: Finding
  event: create
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: { extension: true,
            follow_up_date: <%= (FINDING_WARNING_EXPIRE_DAYS.business_days.from_now.to_date - 8.days).to_s(:db) %>,
            state: <%= Finding::STATUS[:awaiting] %> }
  important: true
  created_at: <%= (2.days.ago.to_date - 3.days).to_s(:db) %>

finding_being_implemented_weakness_with_extension_before_final_review:
  item_id: <%= ActiveRecord::FixtureSet.identify(:being_implemented_weakness) %>
  item_type: Finding
  event: create
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: { extension: true,
            follow_up_date: <%= (FINDING_WARNING_EXPIRE_DAYS.business_days.from_now.to_date - 7.days).to_s(:db) %>,
            state: <%= Finding::STATUS[:being_implemented] %> }
  important: true
  created_at: <%= (2.days.ago.to_date - 2.days).to_s(:db) %>

first_finding_being_implemented_weakness_with_extension_after_final_review:
  item_id: <%= ActiveRecord::FixtureSet.identify(:being_implemented_weakness) %>
  item_type: Finding
  event: update
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: { extension: true,
            follow_up_date: <%= (FINDING_WARNING_EXPIRE_DAYS.business_days.from_now.to_date - 6.days).to_s(:db) %>,
            state: <%= Finding::STATUS[:being_implemented] %> }
  important: true
  created_at: <%= (2.days.ago.to_date + 1.days + 1.hour).to_s(:db) %>

second_finding_being_implemented_weakness_with_extension_after_final_review:
  item_id: <%= ActiveRecord::FixtureSet.identify(:being_implemented_weakness) %>
  item_type: Finding
  event: update
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: { extension: true,
            follow_up_date: <%= (FINDING_WARNING_EXPIRE_DAYS.business_days.from_now.to_date - 5.days).to_s(:db) %>,
            state: <%= Finding::STATUS[:being_implemented] %> }
  important: true
  created_at: <%= (2.days.ago.to_date + 1.days + 2.hour).to_s(:db) %>

finding_being_implemented_weakness_with_extension_and_awaiting_after_final_review:
  item_id: <%= ActiveRecord::FixtureSet.identify(:being_implemented_weakness) %>
  item_type: Finding
  event: update
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: { extension: true,
            follow_up_date: <%= (FINDING_WARNING_EXPIRE_DAYS.business_days.from_now.to_date - 4.days).to_s(:db) %>,
            state: <%= Finding::STATUS[:awaiting] %> }
  important: true
  created_at: <%= (2.days.ago.to_date + 1.days + 3.hour).to_s(:db) %>

finding_being_implemented_weakness_without_extension_and_awaiting_after_final_review:
  item_id: <%= ActiveRecord::FixtureSet.identify(:being_implemented_weakness) %>
  item_type: Finding
  event: update
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: { extension: false,
            follow_up_date: <%= (FINDING_WARNING_EXPIRE_DAYS.business_days.from_now.to_date - 3.days).to_s(:db) %>,
            state: <%= Finding::STATUS[:awaiting] %> }
  important: true
  created_at: <%= (2.days.ago.to_date + 1.days + 4.hour).to_s(:db) %>

finding_being_implemented_without_follow_update_weakness_without_extension_after_final_review:
  item_id: <%= ActiveRecord::FixtureSet.identify(:being_implemented_weakness) %>
  item_type: Finding
  event: update
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: { extension: false,
            follow_up_date: nil,
            state: <%= Finding::STATUS[:being_implemented] %> }
  important: true
  created_at: <%= (2.days.ago.to_date + 1.days + 5.hour).to_s(:db) %>

finding_being_implemented_weakness_without_extension_after_final_review:
  item_id: <%= ActiveRecord::FixtureSet.identify(:being_implemented_weakness) %>
  item_type: Finding
  event: update
  whodunnit: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  organization_id: <%= ActiveRecord::FixtureSet.identify(:cirope) %>
  object: { extension: false,
            follow_up_date: <%= (FINDING_WARNING_EXPIRE_DAYS.business_days.from_now.to_date - 2.days).to_s(:db) %>,
            state: <%= Finding::STATUS[:being_implemented] %> }
  important: true
  created_at: <%= (2.days.ago.to_date + 1.days + 5.hour).to_s(:db) %>
