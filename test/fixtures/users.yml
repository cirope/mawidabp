<% ::PLAIN_PASSWORDS = { :admin => 'admin123' }.with_indifferent_access %>
<% salt = Digest::SHA512.hexdigest("admin#{rand}") %>
administrator:
  name: Administrator
  last_name: Administrator
  language: es
  email: administrator@administrator.com
  function: Administrator function
  office: Administrator office
  user: admin
  password: <%= Digest::SHA512.hexdigest("#{salt}-admin123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: true
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:poll] = 'poll_user123' %>
<% salt = Digest::SHA512.hexdigest("poll#{rand}") %>
poll:
  name: Poll User
  last_name: Poll User
  language: es
  email: polluser@poll.com
  function: Poll function
  office: Poll office
  user: poll
  password: <%= Digest::SHA512.hexdigest("#{salt}-poll_user123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: true
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:admin_second] = 'admin123' %>
<% salt = Digest::SHA512.hexdigest("admin_second#{rand}") %>
administrator_second:
  name: Administrator Second
  last_name: Administrator Second
  language: es
  email: administrator_second@administrator.com
  function: Administrator second function
  office: Administrator second office
  user: admin_second
  password: <%= Digest::SHA512.hexdigest("#{salt}-admin123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:bare] = 'bare123' %>
<% salt = Digest::SHA512.hexdigest("bare#{rand}") %>
bare:
  name: Bare
  last_name: User
  language: es
  email: bare@users.com
  function: Bare function
  office: Bare office
  user: bare
  password: <%= Digest::SHA512.hexdigest("#{salt}-bare123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:first_time] = 'first_time_user' %>
<% salt = Digest::SHA512.hexdigest("first_time#{rand}") %>
first_time:
  name: First Time
  last_name: First User
  language: es
  email: first_time@users.com
  function: First time function
  office: First time office
  user: first_time
  password: <%= Digest::SHA512.hexdigest("#{salt}-first_time") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:expired] = 'expired123' %>
<% salt = Digest::SHA512.hexdigest("expired#{rand}") %>
expired:
  name: Expired
  last_name: Expired
  language: es
  email: expired@expired.com
  function: Expired function
  office: Expired office
  user: expired
  password: <%= Digest::SHA512.hexdigest("#{salt}-expired123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.months.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= 2.days.ago %>
  last_access: <%= DEFAULT_SETTINGS[:account_expire_time][:value].to_i.days.ago.yesterday %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:disabled] = 'diasabled123' %>
<% salt = Digest::SHA512.hexdigest("disabled#{rand}") %>
disabled:
  name: Disabled
  last_name: Disabled
  language: es
  email: disabled@disabled.com
  function: Disabled function
  office: Disabled office
  user: disabled
  password: <%= Digest::SHA512.hexdigest("#{salt}-diasabled123") %>
  salt: <%= salt %>
  enable: false
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:blank_password] = 'blank_password123' %>
<% salt = Digest::SHA512.hexdigest("blank_password#{rand}") %>
blank_password:
  name: Blank
  last_name: Password
  language: es
  email: blank_password@blank-password.com
  function: Blank password function
  office: Blank password office
  user: blank_password
  password: <%= Digest::SHA512.hexdigest("#{salt}-blank_password123") %>
  salt: <%= salt %>
  enable: false
  failed_attempts: 5
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  change_password_hash: <%= SecureRandom.urlsafe_base64 %>
  hash_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:expired_blank_password] = 'expired_blank_password123' %>
<% salt = Digest::SHA512.hexdigest("expired_blank_password#{rand}") %>
expired_blank_password:
  name: Expired Blank
  last_name: Password
  language: es
  email: expired_blank_password@blank-password.com
  function: Expired blank password function
  office: Expired blank password office
  user: expired_blank_password
  password: <%= Digest::SHA512.hexdigest("#{salt}-expired_blank_password123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 20.days.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= BLANK_PASSWORD_STALE_DAYS.next.days.ago.to_fs(:db) %>
  change_password_hash: <%= SecureRandom.urlsafe_base64 %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:president] = 'president123' %>
<% salt = Digest::SHA512.hexdigest("president#{rand}") %>
president:
  name: President
  last_name: Lastname
  language: es
  email: president@users.com
  function: President function
  office: President office
  user: president
  password: <%= Digest::SHA512.hexdigest("#{salt}-president123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:general_manager] = 'general_manager123' %>
<% salt = Digest::SHA512.hexdigest("general_manager#{rand}") %>
general_manager:
  name: General Manager
  last_name: Lastname
  language: es
  email: general_manager@users.com
  function: General Manager function
  office: General Manager office
  user: general_manager
  password: <%= Digest::SHA512.hexdigest("#{salt}-general_manager123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:president) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:general_manager] = 'coordinator_manager123' %>
<% salt = Digest::SHA512.hexdigest("coordinator_manager#{rand}") %>
coordinator_manager:
  name: Coordinator Manager
  last_name: Lastname
  language: es
  email: coordinator_manager@users.com
  function: Coordinator Manager function
  office: Coordinator Manager office
  user: coordinator_manager
  password: <%= Digest::SHA512.hexdigest("#{salt}-coordinator_manager123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:general_manager) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:plain_manager] = 'plain_manager123' %>
<% salt = Digest::SHA512.hexdigest("plain_manager#{rand}") %>
plain_manager:
  name: Plain Manager
  last_name: Lastname
  language: es
  email: plain_manager@users.com
  function: Plain Manager function
  office: Plain Manager office
  user: plain_manager
  password: <%= Digest::SHA512.hexdigest("#{salt}-plain_manager123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:coordinator_manager) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:manager] = 'manager123' %>
<% salt = Digest::SHA512.hexdigest("manager#{rand}") %>
manager:
  name: Manager
  last_name: Lastname
  language: es
  email: manager@users.com
  function: Manager function
  office: Manager office
  user: manager
  password: <%= Digest::SHA512.hexdigest("#{salt}-manager123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:coordinator_manager) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:manager_second] = 'manager_second123' %>
<% salt = Digest::SHA512.hexdigest("manager_second#{rand}") %>
manager_second:
  name: Manager Second
  last_name: Lastname
  language: es
  email: manager_second@users.com
  function: Manager Second function
  office: Manager Second office
  user: manager_second
  password: <%= Digest::SHA512.hexdigest("#{salt}-manager_second123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:coordinator_manager) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:plain_manager_second] = 'plain_manager_second123' %>
<% salt = Digest::SHA512.hexdigest("plain_manager_second#{rand}") %>
plain_manager_second:
  name: Plain Manager Second
  last_name: Lastname
  language: es
  email: plain_manager_second@users.com
  function: Plain Manager Second function
  office: Plain Manager Second office
  user: plain_manager_second
  password: <%= Digest::SHA512.hexdigest("#{salt}-plain_manager_second123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:coordinator_manager) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:supervisor] = 'supervisor123' %>
<% salt = Digest::SHA512.hexdigest("supervisor#{rand}") %>
supervisor:
  name: Supervisor
  last_name: Sup Lastname
  language: es
  email: supervisor@users.com
  function: Supervisor function
  office: Supervisor office
  user: supervisor
  password: <%= Digest::SHA512.hexdigest("#{salt}-supervisor123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:supervisor_second] = 'supervisor_second123' %>
<% salt = Digest::SHA512.hexdigest("supervisor_second#{rand}") %>
supervisor_second:
  name: Supervisor Second
  last_name: Lastname
  language: es
  email: supervisor_second@users.com
  function: Supervisor second function
  office: Supervisor second office
  user: supervisor_second
  password: <%= Digest::SHA512.hexdigest("#{salt}-supervisor_second123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:audited] = 'audited123' %>
<% salt = Digest::SHA512.hexdigest("audited#{rand}") %>
audited:
  name: Audited
  last_name: Audited Lastname
  language: es
  email: audited@users.com
  function: Audited function
  office: Audited office
  user: audited
  password: <%= Digest::SHA512.hexdigest("#{salt}-audited123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:plain_manager) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:audited_second] = 'audited_second123' %>
<% salt = Digest::SHA512.hexdigest("audited_second#{rand}") %>
audited_second:
  name: Audited Second
  last_name: Lastname
  language: es
  email: audited_second@users.com
  function: Audited Second function
  office: Audited Second office
  user: audited_second
  password: <%= Digest::SHA512.hexdigest("#{salt}-audited_second123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:plain_manager_second) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:committee] = 'committee123' %>
<% salt = Digest::SHA512.hexdigest("committee#{rand}") %>
committee:
  name: Committee
  last_name: Committee
  language: es
  email: committee@committee.com
  function: Committee function
  office: Committee office
  user: committee
  password: <%= Digest::SHA512.hexdigest("#{salt}-committee123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 2.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:administrator) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:auditor] = 'auditor123' %>
<% salt = Digest::SHA512.hexdigest("auditor#{rand}") %>
auditor:
  name: Auditor
  last_name: User
  language: es
  email: auditor@users.com
  function: Auditor function
  office: Auditor office
  user: auditor
  password: <%= Digest::SHA512.hexdigest("#{salt}-auditor123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  manager_id: <%= ActiveRecord::FixtureSet.identify(:supervisor) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:corporate] = 'corporate123' %>
<% salt = Digest::SHA512.hexdigest("corporate#{rand}") %>
corporate:
  name: Corporate
  last_name: Corporate
  language: es
  email: corporate@corporate.com
  function: Corporate function
  office: Corporate office
  user: corporate
  password: <%= Digest::SHA512.hexdigest("#{salt}-corporate123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  notes: User notes
  hidden: false
  organizational_unit:

<% ::PLAIN_PASSWORDS[:jane] = 'jane123' %>
<% salt = Digest::SHA512.hexdigest("jane#{rand}") %>
jane:
  name: Jane
  last_name: Doe
  language: es
  email: jane@public.com
  user: jane
  password: <%= Digest::SHA512.hexdigest("#{salt}-jane123") %>
  salt: <%= salt %>
  enable: true
  failed_attempts: 0
  last_access: <%= 30.minutes.ago.to_date.to_fs(:db) %>
  logged_in: false
  group_admin: false
  password_changed: <%= DEFAULT_SETTINGS[:password_minimum_time][:value].to_i.days.ago.to_date.to_fs(:db) %>
  notes: User notes
  hidden: false
  organizational_unit:
