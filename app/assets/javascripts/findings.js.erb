jQuery(function ($) {
  $(document).on('change', '[data-repeated-url]', function () {
    var $repeatedSelect = $(this)
    var repeatedId      = $repeatedSelect.val()
    var urlTemplate     = decodeURI($repeatedSelect.data('repeatedUrl'))
    var url             = urlTemplate.replace('[FINDING_ID]', repeatedId)
    var checkFields     = [
      'impact',
      'operational_risk',
      'internal_control_components'
    ]
    var fields          = [
      'title',
      'description',
      'effect',
      'audit_recommendations',
      'risk',
      'priority',
      'answer',
      'audit_comments',
      'compliance'
    ]

    if (repeatedId) {
      $repeatedSelect.prop('disabled', true)

      $.getScript(url).always(function () {
        $repeatedSelect.prop('disabled', false)
      })
    } else {
      $.each(fields, function (i, field) {
        $('[name$="[' + field + ']"]').val('').trigger('change')
      })

      $.each(checkFields, function (i, field) {
        $('[name$="[' + field + '][]"]').prop('checked', false).trigger('custom:change')
      })

      $('[name$="[state]"]').val('<%= Finding::STATUS[:incomplete] %>').trigger('change')

      $('input[type="checkbox"][name$="[tag_ids][]"]').prop('checked', false)

      $('#taggings .tagging').remove()
      $('#tasks .task').remove()
      disableFollowUpDate()

      $('[name$="[follow_up_date]"]').datepicker('setDate', null)
      $('[name$="[origination_date]"]').
        datepicker('setDate', new Date).
        prop('readonly', false)
    }
  })

  var disableFollowUpDate = function () {
    var hasVisibleTasks = !!$('.task:visible').length

    $('[name$="[follow_up_date]"]').prop('readonly', hasVisibleTasks)

    if (hasVisibleTasks)
      changeFollowUpDate()
  }

  $(document).on('dynamic-item:added', '[data-association="tasks"]', disableFollowUpDate)
  $(document).on('dynamic-item:removed dynamic-item:hidden', '[data-dynamic-target=".task"]', disableFollowUpDate)

  var disableState = function () {
    var hasVisibleIssues = !!$('.issue:visible').length

    $('[name$="[state]"]').attr('readonly', hasVisibleIssues)
  }

  $(document).on('dynamic-item:added', '[data-association="issues"]', disableState)
  $(document).on('dynamic-item:removed dynamic-item:hidden', '[data-dynamic-target=".issue"]', disableState)

  var changeFollowUpDate = function () {
    var lang     = $('html').prop('lang')
    var format   = $.datepicker.regional[lang].dateFormat
    var newValue = ''
    var intValue = 0

    $('[data-override-follow-up-date]:visible').each(function (i, e) {
      var val = $(e).val()
      var int = val ? $.datepicker.parseDate(format, val).getTime() : 0

      if (int && int > intValue) {
        intValue = int
        newValue = val
      }
    })

    if (newValue && $('[name$="[follow_up_date]"]').val() != newValue) {
      var $warningElement = $('[data-follow-up-date-changed-warning]')
      var message         = $warningElement.data('followUpDateChangedWarning')

      $('[name$="[follow_up_date]"]').val(newValue)

      alert(message)
    }
  }

  $(document).on('change', '[data-override-follow-up-date]', changeFollowUpDate)

  $(document).on('change', '[data-toggle-priority]', function () {
    var enabledFor = $(this).data('togglePriority')

    $('[name$="[priority]"]').
      attr('disabled', +$(this).val() !== enabledFor).
      val('<%= Finding.priorities[:low] %>')
  })

  $(document).on('change', '[data-copy-priority]', function () {
    var risk_value = $(this).val()

    $('[name$="[priority]"]').val(risk_value)
  })

  $(document).on('change', '[data-toggle-compliance]', function () {
    var disabledFor = $(this).data('toggleCompliance')
    var $compliance = $('select[name$="[compliance]"]')

    if (+$(this).val() === disabledFor) {
      $compliance.attr('disabled', true).val('no').change()
    } else {
      $compliance.removeAttr('disabled')
    }
  })

  $(document).on('change', '[name$="[compliance]"]', function () {
    $('[type="hidden"][name$="[compliance]"]').val($(this).val())
  })

  $(document).on('change', '[data-check-commitment-date-url]', function () {
    var $commitmentDate = $(this)
    var commitmentDate  = $commitmentDate.val()

    if (commitmentDate && !$('[data-skip-commitment-support]').is(':checked')) {
      var commitmentParam = commitmentDate.replace(/\//g, '-')
      var urlTemplate     = decodeURI($commitmentDate.data('checkCommitmentDateUrl'))
      var url             = urlTemplate.replace('NEW_DATE', commitmentParam)

      $commitmentDate.prop('disabled', true)

      $.getScript(url).always(function () {
        $commitmentDate.prop('disabled', false)
      })
    }
  })

  $(document).on('change', '[data-toggle-risk-disabled-attr]', function () {
    $('[name$="[risk]"]').attr('disabled', ! $(this).is(':checked'))
    $('[data-risk-modifier]').change()
  })

  $(document).on('change', '[data-risk-modifier]', function () {
    var automatic = !$('[name$="[manual_risk]"]').is(':checked')
    var values    = $('[data-risk-modifier]').map(function () {
      return +$(this).val()
    }).get()

    if (automatic) {
      var risk = undefined

      if (values.every(function (v) { return v })) {
        var result     = values.reduce(function (acc, v) { return acc * v }, 1)
        var thresholds = $(this).data('riskModifier')

        $.each(thresholds, function (risk_value, threshold) {
          if (! risk && result <= threshold) {
            risk = risk_value
          }
        })
      }

      if (risk) {
        $('[name$="[risk]"]').val(risk).change()
      } else {
        $('[name$="[risk]"]').val(risk)
      }
    }
  })

  $(document).on('change', '[data-toggle-suggested-impact-disabled-attr]', function () {
    if ($(this).is(':checked')) {
      $('select[name$="[impact_risk]"]').attr('disabled', true)
      $('input[name$="[impact_risk]"]').attr('disabled', false)

      var impactValue = $('[data-impact-risks-value]').data('impactRisksValue')

      $('[name$="[impact_risk]"]').val(impactValue).trigger('change')
    } else {
      $('select[name$="[impact_risk]"]').attr('disabled', false)
      $('input[name$="[impact_risk]"]').attr('disabled', true)
    }
  })

  $(document).on('keyup', '[data-finding-issue-amount]', function() {
    var impactValue
    var total = 0
    var types = $('[data-impact-risks-types]').data('impactRisksTypes')

    $('[data-finding-issue-amount]').each(function (i, e) {
      total += +$(e).val()
    })

    $.each(types, function(i, data) {
      if (total >= data[0]) {
        impactValue = data[1]
        return false
      }
    })

    var currentImpactValue = +$('[data-amount-impact]').val()
    var issuePercentage    = total / currentImpactValue * 100
    var currency           = $('[data-current-currency]').val()

    $('[data-percentage-issue]').text(issuePercentage)
    $('[data-sum-amount-impact-risks]').text(currency + total.toFixed(2))
    $('[data-impact-risks-value]').data('impactRisksValue', impactValue)

    if ($('[data-toggle-suggested-impact-disabled-attr]').is(':checked')) {
      if ($('[name$="[impact_risk]"]').val() !== impactValue) {
        $('[name$="[impact_risk]"]').val(impactValue).trigger('change')
      }
    }
  })

  $(document).on('change', '[name$="[impact_amount]"]', function () {
    var total              = 0
    var amountImpactAssign = +$(this).val()

    $('[data-finding-issue-amount]').each(function (i, e) {
      total += +$(e).val()
    })

    var amountPorcentageIssues = (total * 100) / amountImpactAssign

    $('[data-percentage-issue]').text(amountPorcentageIssues)
  })

  $(document).on('keyup', '[data-endorsement-reason]', function () {
    var $reason       = $(this)
    var reason        = $reason.val() || ''
    var endorsementId = $reason.data('endorsementReason')

    if (reason.trim()) {
      $('[data-endorsement-action="' + endorsementId + '"]').each(function (i, e) {
        var $link = $(e)
        var href = $link.attr('href')
        var newHref = href.replace(/reason=[^&]+/, 'reason=' + encodeURI(reason))

        $link.removeClass('disabled').attr('href', newHref)
      })
    } else {
      $('[data-endorsement-action="' + endorsementId + '"]').each(function (i, e) {
        $(e).addClass('disabled')
      })
    }
  })

  $(document).on('change', '[data-skip-commitment-support]', function () {
    if ($(this).is(':checked')) {
      $('[data-commitment-support]').addClass('d-none')
      $('[data-check-commitment-date-url]').
        removeAttr('data-required').
        attr('disabled', 'disabled').
        val('')
    } else {
      $('[data-check-commitment-date-url]').
        attr('data-required', 'true').
        removeAttr('disabled')

      if ($('[data-commitment-support]').length) {
        $('[data-commitment-support]').removeClass('d-none')
      } else {
        $('[data-check-commitment-date-url]').trigger('change')
      }
    }
  })
})
