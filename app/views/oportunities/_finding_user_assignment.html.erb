<% id = "#{dynamic_object_id('user', f)}_#{is_dynamic ? 'NEW_RECORD' : f.object.id}" %>
<% hide = is_dynamic || f.object.marked_for_destruction? %>
<div class="finding_user_assignment item" id="<%= id %>" <%= raw 'style="display: none;"' if hide %>>
  <div>
    <div class="item_field" style="width: 75%;">
      <% unless readonly %>
        <div class="search">
          <% field_classes = [:search, :autocomplete_field] %>
          <% field_classes << :error_field unless (f.object.errors[:user_id] | f.object.errors[:user]).blank? %>
          <%= text_field_tag 'oportunity[nested_user]',
            f.object.user.try(:full_name_with_function),
            :id => "oportunity_user_#{id}",
            :class => field_classes.join(' '),
            :title => t(:'label.search'),
            :autocomplete => :off,
            :autofocus => true,
            :'data-autocomplete-params' => ("{oportunity_id: #{@oportunity.id}}" unless @oportunity.new_record?),
            :'data-autocomplete-url' => auto_complete_for_user_oportunities_path(:format => :json) %>
          <%= f.hidden_field :user_id, :value => f.object.user_id,
            :id => "hidden_user_id_#{id}", :class => :autocomplete_id %>
        </div>
      <% else %>
        <%= f.hidden_field :user_id, :value => f.object.user_id,
          :id => "hidden_user_id_#{id}" %>
        <%= text_field_tag "oportunity_user_#{id}",
          f.object.user.full_name_with_function(@oportunity.created_at), :readonly => true %>
      <% end %>
    </div>
    <div class="item_field" style="width: 15%;">
      <%= f.check_box :process_owner,
        :disabled => readonly || (f.object.user && !f.object.user.can_act_as_audited?) %>
    </div>
    <div class="item_field item_controls" style="width: 5%;">
      <%= remove_item_link(f) unless readonly %>
    </div>
  </div>
</div>
<% if is_dynamic %>
  <script type="text/javascript">
    Helper.showItem('#<%= id %>');
    AutoComplete.observeAll();
  </script>
<% end %>