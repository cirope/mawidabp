<%= simple_form_for @plan do |f| %>
  <% content_for :js_extra do %>
    <%= raw "var plan_item='#{generate_template(f, :plan_items)}';" %>
  <% end %>
  <%= f.error_notification %>
  <% unless params[:business_unit_type].blank? %>
    <%= show_plan_business_unit_type_info %>
  <% end %>

  <div class="form-inputs">
    <div class="row">
      <div class="col-md-6">
        <div class="col-md-8">
          <% if @plan.new_record? %>
            <%= f.association :period, collection: Period.list_all_without_plans,
              label_method: :inspect, value_method: :id, prompt: true,
              label: Plan.human_attribute_name('period_id'), input_html: { autofocus: true }
            %>
          <% else %>
            <%= f.input :period_id, as: :hidden %>
            <%= f.input :period, label: Plan.human_attribute_name('period_id'), input_html: {
              value: @plan.period.try(:inspect), readonly: true
            } %>
          <% end %>
        </div>
      </div>
      <div class="col-md-6">
        <br />
        <div class="well well-sm">
          <%= Plan.human_attribute_name :estimated_amount %>:
          <strong>
            <%= t('number.currency.format.unit') %>
            <span id="estimated_amount">
              <%= '%.2f' % @plan.estimated_amount(params[:business_unit_type]) %>
            </span>
          </strong>
          <% unless params[:business_unit_type].blank? %>
            <%= link_to t('plan.calculate_estimated_amount'), '#', :onclick =>
              "calculateEstimatedAmount(); return false;", :style => 'margin-left: .5em;' %>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <% if params[:business_unit_type].blank? %>
    <%= show_plan_business_unit_type_list %>
  <% else %>
    <div class="row">
      <div class="col-md-3 col-md-offset-1">
        <h5><strong><%= raw(BusinessUnit.model_name.human +
          show_inline_help_for(:plan_business_unit)) %></strong></h5>
      </div>
      <div class="col-md-2">
        <h5><strong><%= raw(PlanItem.human_attribute_name(:project) +
          show_inline_help_for(:plan_project)) %></strong></h5>
      </div>
      <div class="col-md-3">
        <div class="row">
          <div class="col-md-6">
            <h5><strong><%= raw(PlanItem.human_attribute_name(:start) +
              show_inline_help_for(:plan_start)) %></strong></h5>
          </div>
          <div class="col-md-6">
            <h5><strong><%= raw(PlanItem.human_attribute_name(:end) +
              show_inline_help_for(:plan_end)) %></strong></h5>
          </div>
        </div>
      </div>
      <div class="col-md-2">
        <h5><strong><%= raw(PlanItem.human_attribute_name(:predecessors) +
          show_inline_help_for(:plan_predecessors)) %></strong></h5>
      </div>
    </div>

    <div id="plan_items">
      <% count = 0 # TODO: esto deberÃ­a desaparecer cuando corrijan un error en Rails %>
      <% plan_items_for_selected_business_unit_type.each do |pi| %>
        <% index = (pi.new_record? ? 100000000 : 0) + (count += 1) %>
        <%= f.simple_fields_for :plan_items, pi, :child_index => index do |pi_f| %>
          <% mru_template = nil %>
          <% content_for :js_extra do %>
            <% hru_template ||= generate_template(pi_f, :resource_utilizations,
              :object => ResourceUtilization.new(:resource_type => 'User'),
              :partial => 'human_resource_utilization',
              :child_index => 'NEW_SUBRECORD') %>
            <% mru_template ||= generate_template(pi_f, :resource_utilizations,
              :object => ResourceUtilization.new(:resource_type => 'Resource'),
              :partial => 'material_resource_utilization',
              :child_index => 'NEW_SUBRECORD') %>
            <%= raw "var material_resource_utilization = '#{mru_template}';" unless mru_template == 0 %>
            <%= raw "var human_resource_utilization = '#{hru_template}';" unless hru_template == 0 %>
            <% mru_template = 0 %>
            <% hru_template = 0 %>
          <% end %>
          <%= render partial: 'plan_item', locals: { f: pi_f, is_dynamic: false } %>
        <% end %>
      <% end %>
    </div>

    <%= link_to t('plan.add_plan_item'), '#', 'data-template' => :plan_item,
      'data-event' => 'addNestedItem', 'data-container' => '#plan_items',
    class: 'btn btn-info btn-sm' %>
  <% end %>

  <% if @plan.has_duplication? %>
    <%= f.input :allow_duplication, as: :check_box %>
  <% end %>

  <% if @plan.overloaded? %>
    <%= f.input :allow_overload, as: :check_box %>
  <% end %>

  <hr />

  <div class="form-actions form-footer">
    <div class="pull-right"><%= yield :form_actions %></div>
    <%= f.input :lock_version, as: :hidden %>
    <%= f.input :business_unit_type, as: :hidden, input_html: { value: params[:business_unit_type] } %>
    <%= f.input :clone_from, as: :hidden, input_html: { value: params[:clone_from] } %>
    <%= f.submit class: 'btn btn-primary' %>
  </div>
<% end %>
<script type="text/javascript">
function calculateEstimatedAmount() {
  var estimatedTotal = 0;

  $('input[name$="[cost_per_unit]"]').each(function(i, e) {
    var value = $(e).val();
    var unitsString = $(e).parents('.item').find('input[name$="[units]"]').val();
    var units = parseFloat(unitsString) || 0;

    estimatedTotal += (parseFloat(value) || 0) * units;
  });

  $('#estimated_amount').html(
    estimatedTotal.toFixed(2)
  ).stop(true, true).effect('highlight', {}, 2000);
}

jQuery(function() {
  $(document).on('autocomplete:update', 'input.autocomplete_field', function() {
    var item = $(this).data('item');
    
    if (item.cost_per_unit) {
      $(this).parents('.item:first').find('input[name$="[cost_per_unit]"]').val(
        item.cost_per_unit
      );
    }
  });
  
  Helper.makeSortable('#plan_items', 'div.plan_item', 'a.move');
});
</script>
