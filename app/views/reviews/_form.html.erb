<% readonly = @review.has_final_review? %>
<% frozen = @review.is_frozen? %>
<!--[form:review]-->
<%= form_for @review, :html => { :multipart => true } do |r_f| %>
  <% js_extra = "var lastWorkPaperCode = '#{next_review_work_paper_code(@review)}';" %>
  <% js_extra << "var control_objective='#{escape_javascript render(
    :partial => 'procedure_control_subitem',
    :locals => {:procedure_control_subitem => ProcedureControlSubitem.new,
    :is_dynamic => true})}';" %>
  <% js_extra << "var review_user_assignment='#{generate_template(r_f,
    :review_user_assignments, :locals => {:readonly => readonly})}';" %>
  <% js_extra << "var finding_review_assignment='#{generate_template(r_f,
    :finding_review_assignments, :locals => {:readonly => readonly})}';" %>
  <%= r_f.error_messages %>
  <div class="form_column_left">
    <p class="form_item">
      <%= r_f.label :identification,
        raw(Review.human_attribute_name(:identification) +
          show_inline_help_for(:review_identification)), :class => :inline %>
      <%= r_f.text_field :identification, :readonly => readonly,
        :class => :inline_item %>
    </p>
    <% if [:new, :create].include?(controller.action_name.to_sym) %>
      <p class="form_item">
        <%= r_f.label :period_id, raw(Review.human_attribute_name(:period_id) +
            link_to_add(new_period_path(:back_to => new_review_path))), :class => :inline %>
        <%= r_f.select :period_id, Period.list.map { |p| [p.inspect, p.id] },
          {:prompt => true}, {:class => :inline_item} %>
      </p>
    <% else %>
      <p class="form_item">
        <label class="inline"><%= Review.human_attribute_name :period_id %></label>
        <%= text_field_tag :period_description, @review.period.inspect,
          :class => :inline_item, :size => nil, :readonly => true %>
        <%=  %>
      </p>
    <% end %>
    <% if @review.new_record? %>
      <p class="form_item">
        <%= r_f.label :plan_item_id, nil, :class => :inline %>
        <%= r_f.select :plan_item_id,
          PlanItem.list_unused(@review.period_id).map { |pi| [pi.project, pi.id] },
          {:prompt => true},
          {:class => :inline_item, :disabled => readonly} %>
      </p>
    <% else %>
      <p class="form_item">
        <%= label_tag :plan_item, Review.human_attribute_name(:plan_item_id),
          :class => :inline %>
        <%= text_field_tag :plan_item, @review.plan_item.project,
          :class => :inline_item, :readonly => true %>
      </p>
    <% end %>
    <p class="form_item">
      <%= label_tag :business_unit, Review.human_attribute_name(:business_unit),
        :class => :inline %>
      <%= text_field_tag :business_unit,
        review_business_unit_text(@review),
        :class => :inline_item, :readonly => true %>
    </p>
    <p class="form_item">
      <%= label_tag :audit_type, raw(Review.human_attribute_name(:audit_type) +
          show_inline_help_for(:review_audit_type)), :class => :inline %>
      <%= text_field_tag :audit_type,
        review_business_unit_type_text(@review),
        :class => :inline_item, :readonly => true %>
    </p>
    <p>
      <%= r_f.label :description, raw(Review.human_attribute_name(:description) +
          show_inline_help_for(:review_description)) %>
      <%= r_f.text_area :description, :readonly => readonly %>
    </p>
  </div>
  <div class="form_column_right">
    <p>
      <%= r_f.label :survey, raw(Review.human_attribute_name(:survey) +
          show_inline_help_for(:review_survey)) %>
      <%= r_f.text_area :survey, :readonly => readonly,
        :style => 'height: 16em;' %>
    </p>
    <p class="form_item" style="margin-bottom: 0em;">
      <label class="inline"><%= Review.human_attribute_name :file_model_id %></label>
      <% unless readonly %>
        <% r_f.object.build_file_model unless r_f.object.file_model %>
        <%= r_f.fields_for :file_model do |fm_f| %>
          <span class="file_container">
            <%= fm_f.file_field :file, :class => 'inline_item file' %>
          </span>
        <% end %>
      <% end %>
      
      <% if r_f.object.file_model.try(:file) && !r_f.object.file_model.new_record? %>
        <%= link_to_download r_f.object.file_model.file.url, :style => 'margin-left: 1em;' %>
      <% end %>
    </p>
    <p>
      <%= link_to_unless @review.new_record?, t(:'review.survey.download'),
        :action => :survey_pdf, :id => @review %>
    </p>
    <div id="estimated_amount" style="margin-top: .5em;">
      <%= render :partial => 'estimated_amount',
        :locals => {:plan_item => @review.plan_item} %>
    </div>
  </div>

  <div class="items">
    <div class="column_headers">
      <div class="item_column" style="width: 40%;">
        <h3><%= ReviewUserAssignment.human_attribute_name :user %></h3>
      </div>
      <div class="item_column" style="width: 20%;">
        <h3><%= raw(ReviewUserAssignment.human_attribute_name(:assignment_type) +
          show_inline_help_for(:review_user_assignment_type)) %></h3>
      </div>
      <div class="item_column" style="width: 5%;"></div>
      <div class="clear"></div>
    </div>

    <div id="review_user_assignments">
      <%= r_f.fields_for :review_user_assignments do |rua_f| %>
        <%= render :partial => 'review_user_assignment',
          :locals => {:f => rua_f, :is_dynamic => false, :readonly => readonly} %>
      <% end %>
    </div>
  </div>

  <% unless readonly %>
    <p class="add_item">
      <%= link_to t(:'review.add_user_assignment'), '#',
        :'data-event' => :add_nested_item,
        :'data-template' => :review_user_assignment,
        :'data-container' => :review_user_assignments %>
    </p>
  <% end %>

  <% unless @review.control_objective_items.empty? %>
    <div class="textual_items" style="margin-top: 2em;">
      <h1><%= t(:'review.control_objective_items_label') %></h1>
      <div id="control_objective_items">
        <% control_objective_items = @review.control_objective_items %>
        <% control_objective_items.group_by(&:process_control).each do |pc, cois| %>
          <h3><%= pc.name %></h3>
          <%= r_f.fields_for :control_objective_items, cois do |coi_f| %>
            <%= render :partial => 'control_objective_item', :locals => {
              :co_f => coi_f, :readonly => readonly, :frozen => frozen} %>
          <% end %>
        <% end %>
      </div>
    </div>
  <% end %>

  <% unless readonly %>
    <div class="items" style="margin-top: 2em;">
      <div class="column_headers">
        <div class="item_column" style="width: 95%;">
          <h3><%= ControlObjective.model_name.human %></h3>
        </div>
        <div class="item_column" style="width: 2%;"></div>
        <div class="clear"></div>
      </div>

      <div id="control_objectives">
      </div>
    </div>

    <p class="add_item">
      <%= link_to t(:'review.add_control_objective'), '#',
        :'data-event' => :add_nested_item,
        :'data-template' => :control_objective,
        :'data-container' => :control_objectives %>
    </p>
  <% end %>

  <div class="items" style="margin-top: 2em;">
    <h1><%= t(:'review.findings_label') %></h1>
    
    <div class="simple_column_headers">
      <div class="item_column" style="width: 95%;">
        <h3><%= FindingReviewAssignment.human_attribute_name :finding %></h3>
      </div>
      <div class="item_column" style="width: 5%;"></div>
      <div class="clear"></div>
    </div>

    <div id="finding_review_assignments">
      <%= r_f.fields_for :finding_review_assignments do |fra_f| %>
        <%= render :partial => 'finding_review_assignment',
          :locals => {:f => fra_f, :is_dynamic => false, :readonly => readonly} %>
      <% end %>
    </div>
  </div>

  <% unless readonly %>
    <p class="add_item">
      <%= link_to t(:'review.add_finding_assignment'), '#',
        :'data-event' => :add_nested_item,
        :'data-template' => :finding_review_assignment,
        :'data-container' => :finding_review_assignments %>
    </p>
  <% end %>

  <%= hidden_lock_version(r_f) %>

  <p>
    <span class="button"><%= r_f.submit %></span>
  </p>
  <%= content_for :js_extra do %>
    <%= raw js_extra %>
  <% end %>
<% end %>
<!--[eoform:review] -->
<%= set_focus_to_first_element %>
<script type="text/javascript">
//<![CDATA[
  if($('review_plan_item_id')) {
    Event.observe('review_plan_item_id', 'change', function() {
      var data_url = '<%= plan_item_data_reviews_path %>';
      var amount_url = '<%= estimated_amount_reviews_path %>';
      var element = $(this);

      $('business_unit').setValue('');
      $('audit_type').setValue('');
      
      if(!$F(this).blank()) {
        new Ajax.Request(data_url, {
          method: 'get',
          parameters: {id: $F(this)},
          onCreate: function() {
            Helper.showLoading(element);
          },
          onSuccess: function(transport) {
            var planItemData = transport.responseJSON;

            $('business_unit').setValue(planItemData.business_unit_name);
            $('audit_type').setValue(planItemData.business_unit_type);
          },
          onComplete: function() {
            Helper.hideLoading(element);
          }
        });

        new Ajax.Updater({ success: 'estimated_amount' }, amount_url, {
          method: 'get',
          parameters: { id: $F(this) },
          onCreate: function() { Helper.showLoading(element); },
          onComplete: function() {
            Helper.hideLoading(element);
            new Effect.Highlight('estimated_amount', {
              duration: 2,
              queue: { position: 'end', scope: 'review', limit: 1 }
            });
          }
        });
      }
    });
  }

  HTMLUtil.stylizeAllInputFiles();
//]]>
</script>