<% readonly = @review.has_final_review? %>
<% frozen = @review.is_frozen? %>
<%= simple_form_for @review do |f| %>
  <% js_extra = "var lastWorkPaperCode = '#{next_review_work_paper_code(@review)}';" %>
  <%= render 'shared/error_explanation', f: f %>

  <div class="form-inputs">
    <div class="row">
      <div class="col-md-6">
        <% if SHOW_REVIEW_AUTOMATIC_IDENTIFICATION && !readonly %>
          <%= render 'automatic_identification', f: f %>
        <% else %>
          <%= f.input :identification, label: Review.human_attribute_name(:identification), input_html: {
            autofocus: !SHOW_REVIEW_AUTOMATIC_IDENTIFICATION && !readonly,
            readonly: readonly
          } %>
        <% end %>
        <% if @review.new_record? %>
          <%= f.input :period_id, collection: Period.list_all_with_plans.map { |p| [p.inspect, p.id] },
            prompt: true,
            input_html: {
              data: { plan_item_refresh_url: plan_item_refresh_reviews_path }
            }
          %>
        <% else %>
          <%= f.input :period_description, label: Review.human_attribute_name('period_id'),
            input_html: { value: @review.period.inspect, readonly: true } %>
        <% end %>
        <% if @review.new_record? %>
          <div class="form-group">
            <%= f.label :plan_item_id %>
            <%= review_plan_item_field(f, readonly) %>
          </div>
        <% else %>
          <%= f.input :plan_item,
            input_html: { value: @review.plan_item.project, readonly: true } %>
        <% end %>
        <%= f.input :business_unit,
          input_html: { value: review_business_unit_text(@review), readonly: true } %>
        <%= f.input :audit_type, label: Review.human_attribute_name(:audit_type), input_html: {
          value: review_business_unit_type_text(@review), readonly: true } %>
      </div>
      <div class="col-md-6">
        <% unless HIDE_REVIEW_DESCRIPTION %>
          <%= f.input :description, label: Review.human_attribute_name(:description),
            input_html: { readonly: readonly, rows: 5 } %>
        <% end %>

        <%= f.input :survey, label: Review.human_attribute_name(:survey),
          input_html: { readonly: readonly, rows: HIDE_REVIEW_DESCRIPTION ? 8 : 5 } %>

        <p class="mb-1 text-right">
          <%= link_to_unless @review.new_record?, t('review.survey.download'),
            :action => :survey_pdf, :id => @review, :_ts => Time.now.to_i %>
        </p>

        <div class="row">
          <div class="col-md-6">
            <p class="mb-1"><%= Review.human_attribute_name 'file_model_id' %></p>

            <div class="clearfix">
              <%= f.simple_fields_for :file_model_reviews do |fm_r| %>
                <%= render 'file_model_review', f: fm_r, frozen: frozen %>
              <% end %>

              <%= link_to_add_fields t('review.add_file_model'), f, :file_model_reviews, 'file_model_review' unless frozen %>
            </div>
          </div>
          <% if ORGANIZATIONS_WITH_REVIEW_SCORE_BY_WEAKNESS.include? current_organization.prefix %>
            <div class="col-md-6">
              <%= f.input(
                :score_type,
                label:           t('review.without_score'),
                as:              :boolean,
                checked_value:   'none',
                unchecked_value: 'weaknesses',
                input_html:      { disabled: readonly }
              ) %>
            </div>
          <% end %>
        </div>

        <div id="estimated_amount" class="mt-3">
          <%= render partial: 'estimated_amount', locals: { plan_item: @review.plan_item } %>
        </div>
      </div>
    </div>

    <% if USE_SCOPE_CYCLE %>
      <div class="row mt-3">
        <div class="col-md-6">
          <%= f.input :manual_score, input_html: { min: 0, max: 100, step: 1, disabled: readonly } %>
        </div>
        <% if @review.new_record? || @review.plan_item&.cycle? %>
          <div class="col-md-6" data-manual-score-alt>
            <%= f.input :manual_score_alt, input_html: { min: 0, max: 100, step: 1, disabled: readonly } %>
          </div>
        <% end %>
      </div>

      <h5 class="h6 mt-3">
        <%= BusinessUnitTypeUser.human_attribute_name 'business_unit_type_id' %>
      </h5>

      <div>
        <%= f.simple_fields_for :business_unit_type_reviews do |but_r| %>
          <%= render 'business_unit_type_review', f: but_r %>
        <% end %>

        <%= link_to_add_fields t('.add_business_unit_type'), f, :business_unit_type_reviews %>
      </div>
    <% end %>

    <% if SHOW_REVIEW_EXTRA_ATTRIBUTES %>
      <div class="row">
        <div class="col-md-6">
          <%= f.input :scope, collection: review_scope_options, prompt: true, input_html: { disabled: readonly } %>
          <%= f.input :include_sox, collection: review_include_sox_options, prompt: true, input_html: { disabled: readonly } %>
        </div>
        <div class="col-md-6">
          <%= f.input :risk_exposure, collection: review_risk_exposure_options, prompt: true, input_html: { disabled: readonly } %>
          <%= f.input :manual_score, input_html: { min: 0, max: 1000, step: 1, disabled: readonly } %>
        </div>
      </div>
    <% end %>
  </div>

  <div class="row mt-3">
    <div class="col-md-6">
      <h5 class="h6"><%= ReviewUserAssignment.human_attribute_name 'user' %></h5>
    </div>
    <div class="col-md-<%= Current.conclusion_pdf_format == 'gal' ? 5 : 3 %>">
      <h5 class="h6"><%= ReviewUserAssignment.human_attribute_name 'assignment_type' %></h5>
    </div>
    <% unless Current.conclusion_pdf_format == 'gal' %>
      <div class="col-md-1">
        <h5 class="h6"><%= ReviewUserAssignment.human_attribute_name 'include_signature' %></h5>
      </div>
      <div class="col-md-1">
        <h5 class="h6"><%= ReviewUserAssignment.human_attribute_name 'owner' %></h5>
      </div>
    <% end %>
  </div>

  <div id="review_user_assignments">
    <% audit_team, others = @review.review_user_assignments.partition &:in_audit_team? %>

    <% if audit_team.present? %>
      <h5 class="text-muted"><%= t 'review.user_assignment.audit_team' %></h5>

      <%= f.simple_fields_for :review_user_assignments, audit_team do |rua_f| %>
        <%= render 'review_user_assignment', f: rua_f, readonly: readonly %>
      <% end %>
    <% end %>

    <% if others.present? %>
      <h5 class="text-muted"><%= t 'review.user_assignment.others' %></h5>

      <%= f.simple_fields_for :review_user_assignments, others do |rua_f| %>
        <%= render 'review_user_assignment', f: rua_f, readonly: readonly %>
      <% end %>
    <% end %>

    <% unless readonly %>
      <hr>

      <div data-review-user-assignments-container></div>

      <%= link_to_add_fields(
        t('review.add_user_assignment'), f, :review_user_assignments, nil, {}, { readonly: readonly }
      ) %>
    <% end %>
  </div>

  <% if !readonly || @review.taggings.any? %>
    <h4 class="mt-3<%= ' text-danger' if @review.errors[:taggings].present? %>">
      <%= Tag.model_name.human count: 0 %>
    </h4>

    <div class="row">
      <div class="col-md-6">
        <h5 class="h6"><%= Tag.human_attribute_name :name %></h5>
      </div>
    </div>

    <div id="taggings">
      <%= f.simple_fields_for :taggings do |fr_f| %>
        <%= render 'reviews/tagging', f: fr_f, readonly: readonly %>
      <% end %>

      <p class="mb-1">
        <%= link_to_add_fields(t('review.add_tagging'), f, :taggings, 'reviews/tagging', {}, { readonly: readonly }) unless readonly %>
      </p>
    </div>
  <% end %>

  <h4 class="mt-3">
    <%= t('review.control_objective_items_label') %>
    <% if @review.persisted? && !readonly %>
      <span class="float-right small">
        <%= link_to_excluded_control_objectives %>
      </span>
    <% end %>
  </h4>

  <hr />

  <div data-control-objective-items-container>
  </div>

  <% if @review.control_objective_items.any? %>
    <%= render 'control_objective_items', f: f, readonly: readonly, frozen: frozen %>
  <% end %>

  <% unless readonly %>
    <ul class="nav nav-tabs mt-3">
      <li class="nav-item">
        <a class="nav-link active" href="#control-objective" data-toggle="tab">
          <%= ControlObjective.model_name.human %>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#process-control" data-toggle="tab">
          <%= ProcessControl.model_name.human %>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#best-practice" data-toggle="tab">
          <%= BestPractice.model_name.human %>
        </a>
      </li>
      <li class="nav-item">
        <a class="nav-link" href="#control-objective-tag" data-toggle="tab">
          <%= t('review.control_objective_tag') %>
        </a>
      </li>
    </ul>

    <div class="tab-content pt-3">
      <div class="tab-pane active" id="control-objective">
        <div id="control_objectives">
          <%= link_to_add_fields(
            t('review.add_control_objective'), f, :control_objective_items, 'control_objective', action: 'add-control-objective'
          ) %>
        </div>
      </div>

      <div class="tab-pane" id="process-control">
        <div id="process_controls">
          <%= link_to_add_fields(
            t('review.add_process_control'), f, :control_objective_items, 'process_control'
          ) %>
        </div>
      </div>

      <div class="tab-pane" id="best-practice">
        <div id="best_practices">
          <%= link_to_add_fields(
            t('review.add_best_practice'), f, :control_objective_items, 'best_practice'
          ) %>
        </div>
      </div>
      <div class="tab-pane" id="control-objective-tag">
        <div id="control_objective_tags">
          <%= link_to_add_fields t('review.add_control_objective_tag'), f, :control_objective_items, 'control_objective_tag' %>
        </div>
      </div>
    </div>
  <% end %>

  <h4 class="mt-3"><%= t 'review.findings_label' %></h4>

  <hr />

  <div id="suggested_process_control_findings"></div>
  <div id="suggested_findings"></div>
  <div id="past_implemented_audited_findings"></div>

  <% finding_relations = @review.finding_review_assignments.reject(&:marked_for_destruction?) %>
  <% unless finding_relations.empty? %>
    <%= f.simple_fields_for :finding_review_assignments, finding_relations do |fra_f| %>
      <%= render 'finding_review_assignment_readonly', f: fra_f, readonly: readonly %>
    <% end %>
  <% end %>

  <% unless readonly %>
    <h5 class="h6 mt-3"><%= FindingReviewAssignment.human_attribute_name 'finding' %></h5>

    <div id="finding_review_assignments"></div>
    <div id="finding_review_dynamic_assignments"></div>
    <p class="mb-1">
      <%= link_to_add_fields(
        t('review.add_finding_assignment'), f,
        :finding_review_assignments, nil,
        { insert_into: '#finding_review_dynamic_assignments' }
      ) %>
      <%= link_to_add_fields(
        t('review.add_past_findings'), f,
        :finding_review_assignments,
        'implemented_audited_finding',
        { insert_into: '#finding_review_dynamic_assignments' }
      ) %>
      <%= link_to t('review.suggest_findings'), @review.plan_item_id ?
        suggested_findings_review_path(id: @review.plan_item_id) : '#',
        :remote => true, :id => :link_to_suggested_findings,
        :class => 'btn btn-outline-secondary btn-sm' %>
      <%= link_to t('review.suggest_past_findings'), @review.plan_item_id ?
        past_implemented_audited_findings_review_path(id: @review.plan_item_id) : '#',
        :remote => true, :id => :link_to_past_implemented_audited_findings,
        :class => 'btn btn-outline-secondary btn-sm' %>
    </p>
  <% end %>

  <% if @review.work_papers_finished? %>
    <div class="alert alert-info mt-3">
      <%= t 'review.work_papers_marked_as_finished' %>
    </div>
  <% elsif @review.work_papers_revised? %>
    <div class="alert alert-success mt-3">
      <%= t 'review.work_papers_marked_as_revised' %>
    </div>
  <% end %>

  <hr />

  <div class="form-actions">
    <div class="float-right"><%= yield :form_actions %></div>
    <%= f.input :lock_version, as: :hidden %>
    <%= f.submit class: 'btn btn-primary' %>
  </div>
  <%= content_for :js_extra do %>
    <%= raw js_extra %>
  <% end %>
<% end %>
<script type="text/javascript">
jQuery(function() {
  $('#review_plan_item_id').change(function () {
    var element = $('#review_plan_item_id');
    var url = '<%= plan_item_data_reviews_path %>';

    $('#review_scope').val('');
    $('#review_risk_exposure').val('');
    $('#review_business_unit').val('');
    $('#review_audit_type').val('');
    $('#estimated_amount').html('');

    if(!element.val().match(/^\s*$/)) {
      Helper.showLoading(element);

      $.ajax({
        url: url,
        dataType: 'script',
        data: {
          id: element.val()
        }
      }).always(function () {
        Helper.hideLoading(element);
      });
    } else {
      $('#review_identification_prefix').prop('disabled', false).val('');
      $('#review_identification_number').val('');
      $('#link_to_suggested_findings').attr('href', '#');
      $('#link_to_suggested_findings').addClass('link_without_action');
      $('#link_to_past_implemented_audited_findings').attr('href', '#');
      $('#link_to_past_implemented_audited_findings').addClass('link_without_action');
      $('#control_objectives').find('fieldset.control_objective[data-dynamic]').remove();
      $('[data-review-user-assignments-container]').html('')
      $('[data-control-objective-items-container]').html('')
      $('[data-manual-score-alt]').removeClass('d-none')
    }
  });

  $('#link_to_suggested_findings').click(function() {
    if($('#link_to_suggested_findings').attr('href') == '#') {
      return false;
    }
  });

  $('#link_to_suggested_findings').bind('ajax:success', function(event, data) {
    $('#suggested_findings').html(data);
  });

  $('#link_to_past_implemented_audited_findings').click(function() {
    if($('#link_to_past_implemented_audited_findings').attr('href') == '#') {
      return false;
    }
  });

  $('#link_to_past_implemented_audited_findings').bind('ajax:success', function(event, data) {
    $('#past_implemented_audited_findings').html(data);
  });

  Helper.makeSortable(
    '#control_objective_items', 'div.process_control', 'a.process_control_move'
  );

  FormUtil.completeSortNumbers();
});
</script>
