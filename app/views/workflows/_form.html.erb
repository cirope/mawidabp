<%= simple_form_for @workflow do |f| %>
  <% js_extra = "var workflow_item='#{generate_template(f, :workflow_items)}';" %>
  <%= f.error_notification %>

  <div class="form-inputs">
    <div class="row">
      <div class="col-md-6">
        <% if @workflow.new_record? %>
          <%= f.input :period_id, label: raw(Workflow.human_attribute_name(:period_id) +
            link_to_add(new_period_path(:back_to => new_workflow_path))),
            collection: Period.list.map { |p| [p.inspect, p.id] }, prompt: true %>
        <% else %>
          <div class="col-md-6">
            <%= f.input :period_description, label: Workflow.human_attribute_name('period_id'),
              input_html: { value: @workflow.period.inspect, readonly: true } %>
          </div>
        <% end %>
      </div>
      <div class="col-md-6">
        <% if @workflow.new_record? %>
          <%= review_id_field(f) %>
        <% else %>
          <%= f.input :review_description, label: Workflow.human_attribute_name('review_id'),
            input_html: { value: @workflow.review, readonly: true } %>
        <% end %>
      </div>
    </div>
  </div>

  <table class="table table-condensed table-striped">
    <thead>
      <tr>
        <th></th>
        <th><%= t('workflow.column_real') %></th>
        <th><%= t('workflow.column_estimated') %></th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><strong><%= t('workflow.row_time') %></strong></td>
        <td>
          <%= @workflow.new_record? ? '-' : show_detailed_distance_of_time(@workflow.begining, @workflow.ending) %>
          | <%= t(:worked_hours, :scope => [:workflow], :count => ('%.2f' % @workflow.human_unit_cost)) %>
        </td>
        <td><%= @workflow.plan_item ? show_detailed_distance_of_time(@workflow.plan_item.start, @workflow.plan_item.end) : '-' %></td>
      </tr>
      <tr style="vertical-align: text-top;">
        <td><strong><%= t('workflow.row_cost') %></strong></td>
        <td><%= t('number.currency.format.unit') %><span id="workflow_cost"><%= '%.2f' %  @workflow.cost %></span>
          <%= link_to t('workflow.calculate_estimated_amount'), '#', :onclick =>
            "calculateCost(); return false;", :style => 'margin-left: .5em;' %></td>
        <td>
          <div id="estimated_amount">
            <%= render partial: 'estimated_amount',
              locals: { plan_item: @workflow.review.try(:plan_item) } %>
          </div>
        </td>
      </tr>
    </tbody>
  </table>

  <div class="row">
    <div class="col-md-4 col-md-offset-1">
      <h5><strong><%= raw(WorkflowItem.human_attribute_name(:task) +
        show_inline_help_for(:workflow_task)) %></strong></h5>
    </div>
    <div class="col-md-2">
      <h5><strong><%= WorkflowItem.human_attribute_name :start %></strong></h5>
    </div>
    <div class="col-md-2">
      <h5><strong><%= WorkflowItem.human_attribute_name :end %></strong></h5>
    </div>
    <div class="col-md-2">
      <h5><strong><%= raw(WorkflowItem.human_attribute_name(:predecessors) +
        show_inline_help_for(:workflow_predecessors)) %></strong></h5>
    </div>
  </div>

  <div id="workflow_items">
    <%= f.simple_fields_for :workflow_items, @workflow.workflow_items.sort! do |wi_f| %>
      <% hru_template ||= generate_template(wi_f, :resource_utilizations,
        :object => ResourceUtilization.new(:resource_type => 'User'),
        :partial => 'human_resource_utilization',
        :child_index => 'NEW_SUBRECORD') %>
      <% mru_template ||= generate_template(wi_f, :resource_utilizations,
        :object => ResourceUtilization.new(:resource_type => 'Resource'),
        :partial => 'material_resource_utilization',
        :child_index => 'NEW_SUBRECORD') %>
      <% js_extra << "var material_resource_utilization = '#{mru_template}';" unless mru_template == 0 %>
      <% js_extra << "var human_resource_utilization = '#{hru_template}';" unless hru_template == 0 %>
      <% mru_template = 0 %>
      <% hru_template = 0 %>
      <%= render partial: 'workflow_item', locals: { f: wi_f, is_dynamic: false } %>
    <% end %>
  </div>

  <%= link_to t('label.add_item'), '#', 'data-template' => :workflow_item,
    'data-event' => 'addNestedItem', 'data-container' => '#workflow_items',
  class: 'btn btn-default btn-sm' %>

  <% if @workflow.overloaded? %>
    <p class="form_item">
      <%= f.label :allow_overload, t('workflow.allow_overload'),
        :class => 'inline error_field' %>
      <%= f.check_box :allow_overload, :class => :inline_item %>
    </p>
  <% end %>

  <hr />

  <div class="form-actions form-footer">
    <div class="pull-right"><%= yield :form_actions %></div>
    <%= f.input :lock_version, as: :hidden %>
    <%= f.submit class: 'btn btn-primary' %>
  </div>
  <%= content_for :js_extra do %>
    <%= raw js_extra %>
  <% end %>
<% end %>
<script type="text/javascript">
function calculateCost() {
  var costElement = $('#workflow_cost');
  var estimatedCost = 0;

  $('input[name$="[cost_per_unit]"]').each(function(i, e) {
    var unitsString = $(e).closest('.item').find('input[name$="[units]"]').val();
    var units = parseFloat(unitsString) || 0;
    estimatedCost += (parseFloat($(e).val()) || 0) * units;
  });

  costElement.html(
    estimatedCost.toFixed(2)
  ).stop(true, true).effect('highlight', {}, 2000);
}

jQuery(function() {
  $(document).on('autocomplete:update', 'input.autocomplete_field', function() {
    var item = $(this).data('item');

    if (item.cost_per_unit) {
      $(this).parents('.item:first').find('input[name$="[cost_per_unit]"]').val(
        item.cost_per_unit
      );
    }
  });

  $('#workflow_period_id').change(function() {
    var element = $(this);

    if(parseInt($(this).val()) > 0) {
      var url = '<%= reviews_for_period_workflows_path %>';

      Helper.showLoading(element);

      $.get(url, { period: $(this).val(), format: 'json' }, function(data) {
        HTMLUtil.updateOptions(
          $('#workflow_review_id'), HTMLUtil.optionsFromArray(data)
        );
      }).complete(function() {
        Helper.hideLoading(element);
        Helper.hideLoading('#workflow_review_id');
      });
    } else {
      element.val('').attr('disabled', true);
    }
  });

  $('#workflow_review_id').change(function() {
    var url = '<%= estimated_amount_workflows_path %>';
    var element = $(this);

    Helper.showLoading(element);

    $.get(url, { id: $(this).val() }, function(data) {
      $('#estimated_amount').html(data).stop(true, true).effect(
        'highlight', {}, 2000
      );
    }).complete(function() {
      Helper.hideLoading(element);
    });
  });

  Helper.makeSortable('#workflow_items', 'div.workflow_item', 'a.move');
  FormUtil.completeSortNumbers();
});
</script>
