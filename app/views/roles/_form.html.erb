<div class="card">
  <div class="card-body">
    <%= simple_form_for @role do |f| %>
      <%= render 'shared/error_explanation', f: f %>

      <div class="form-inputs">
        <div class="row">
          <div class="col-lg-4">
            <%= f.input :name, input_html: { maxlength: 255, autofocus: true } %>
          </div>
          <div class="col-lg-4">
            <%= role_type_field(f) %>
          </div>
          <div class="col-lg-4">
            <%= f.input :identifier %>
          </div>
        </div>
      </div>

      <table class="table table-sm table-striped table-hover my-3">
        <thead>
          <tr>
            <th><%= Privilege.model_name.human %></th>
            <th><%= Privilege.human_attribute_name :read %></th>
            <th><%= Privilege.human_attribute_name :modify %></th>
            <th><%= Privilege.human_attribute_name :erase %></th>
            <th><%= Privilege.human_attribute_name :approval %></th>
          </tr>
        </thead>
        <tbody data-menu-items>
          <%= render 'menu_items', f: f %>
        </tbody>
      </table>

      <hr />

      <div class="form-actions">
        <div class="float-end"><%= yield :form_actions %></div>
        <%= f.input :lock_version, as: :hidden %>
        <%= f.submit class: 'btn btn-primary' %>
      </div>
    <% end %>
  </div>
</div>

<script type="text/javascript">

var Privileges = {
  markChildren: function(element, checked) {
    var parent = element.closest('tr').attr('id');
    var type = element.data('type');
    var children = $('[data-parent="' + parent + '"] :checkbox[data-type="' + type + '"]');

    children.trigger('click');
  },
  markSiblings: function(element, type, checked) {
    var siblings = element.parents('tr').find('[data-type="' + type + '"]');

    siblings.attr('checked', checked);
  }
};

jQuery(function() {
  $('#role_role_type').data('resetValue', $('#role_role_type').val());

  $(':checkbox').click(function() {
    var element = $(this);
    var checked = element.is(':checked');
    var type = element.data('type');

    switch(type) {
      case 'approval':
        if(checked) {
          Privileges.markSiblings(element, 'read', checked);
        }

        Privileges.markChildren(element, checked);
        break;
      case 'erase':
        if(!checked) {
          Privileges.markSiblings(element, 'approval', checked);
        } else {
          Privileges.markSiblings(element, 'modify', checked);
          Privileges.markSiblings(element, 'read', checked);
        }

        Privileges.markChildren(element, checked);
        break;
      case 'modify':
        if(checked) {
          Privileges.markSiblings(element, 'read', checked);
        } else {
          Privileges.markSiblings(element, 'erase', checked);
          Privileges.markSiblings(element, 'approval', checked);
        }

        Privileges.markChildren(element, checked);
        break;
      case 'read':
        if(!checked) {
          Privileges.markSiblings(element, 'modify', checked);
          Privileges.markSiblings(element, 'erase', checked);
          Privileges.markSiblings(element, 'approval', checked);
        }

        Privileges.markChildren(element, checked);
        break;
    }
  });

  $('#role_role_type').change(function() {
    var $select = $(this);
    var selectedType = $select.val();
    var url = '<%= @role.new_record? ? new_role_path(role: {role_type: "REPLACE"}) : edit_role_path(@role, role: {role_type: "REPLACE"}) %>';

    if(selectedType) {
      $select.prop('disabled', true)

      $.getScript(url.replace('REPLACE', selectedType)).always(function () {
        $select.prop('disabled', false)
      })
    }
  });
});
</script>
