<!--[form:role]-->
<%= form_for @role do |r_f| %>
  <%= r_f.error_messages %>
  <div class="form_column_left">
    <p class="form_item">
      <%= r_f.label :name, nil, :class => :inline %>
      <%= r_f.text_field :name, :maxlength => 255, :class => :inline_item,
        :autofocus => true %>
    </p>
  </div>
  <div class="form_column_right">
    <p class="form_item">
      <%= r_f.label :role_type, nil, :class => :inline %>
      <%= role_type_field(r_f) %>
    </p>
  </div>

  <table class="summary_table clear">
    <thead>
      <tr>
        <th><%= Privilege.model_name.human %></th>
        <th style="width: 5%;"><%= Privilege.human_attribute_name :read %></th>
        <th style="width: 5%;"><%= Privilege.human_attribute_name :modify %></th>
        <th style="width: 5%;"><%= Privilege.human_attribute_name :erase %></th>
        <th style="width: 5%;"><%= Privilege.human_attribute_name :approval %></th>
      </tr>
    </thead>
    <tbody>
      <% if @auth_organization.system_quality_management? %>
        <% menu_items = @role.audited? ? APP_AUDITED_SQM_MENU_ITEMS : APP_AUDITOR_SQM_MENU_ITEMS %>
      <% else %>
        <% menu_items = @role.audited? ? APP_AUDITED_MENU_ITEMS : APP_AUDITOR_MENU_ITEMS %>
      <% end %>
      <% menu_items.each do |menu_item| %>
        <%= render :partial => 'menu_item', :locals => {
          :menu_item => menu_item, :role_form => r_f} %>
      <% end %>
    </tbody>
  </table>

  <%= hidden_lock_version(r_f) %>
  <p>
    <span class="button"><%= r_f.submit %></span>
  </p>
<% end %>
<!--[eoform:role] -->
<script type="text/javascript">

var Privileges = {
  markChildren: function(element, checked) {
    var parent = element.parents('.menu_item').attr('id');
    var type = element.data('type');
    var children = $('*[data-parent="' + parent + '"] :checkbox[data-type="' + type + '"]');

    children.attr('checked', checked).trigger('click').attr('checked', checked);
  },
  markSiblings: function(element, type, checked) {
    var siblings = element.parents('.menu_item').find(
      '[data-type="' + type + '"]'
    );

    siblings.attr('checked', checked);
  }
};

jQuery(function() {
  $('#role_role_type').data('resetValue', $('#role_role_type').val());

  $(':checkbox').click(function() {
    var element = $(this);
    var checked = element.is(':checked');
    var type = element.data('type');

    switch(type) {
      case 'approval':
        if(checked) {
          Privileges.markSiblings(element, 'read', checked);
        }

        Privileges.markChildren(element, checked);
        break;
      case 'erase':
        if(!checked) {
          Privileges.markSiblings(element, 'approval', checked);
        } else {
          Privileges.markSiblings(element, 'modify', checked);
          Privileges.markSiblings(element, 'read', checked);
        }

        Privileges.markChildren(element, checked);
        break;
      case 'modify':
        if(checked) {
          Privileges.markSiblings(element, 'read', checked);
        } else {
          Privileges.markSiblings(element, 'erase', checked);
          Privileges.markSiblings(element, 'approval', checked);
        }

        Privileges.markChildren(element, checked);
        break;
      case 'read':
        if(!checked) {
          Privileges.markSiblings(element, 'modify', checked);
          Privileges.markSiblings(element, 'erase', checked);
          Privileges.markSiblings(element, 'approval', checked);
        }

        Privileges.markChildren(element, checked);
        break;
    }
  });

  $('#role_role_type').change(function() {
    var selectedType = $(this).val();
    var url = '<%= @role.new_record? ? new_role_path : edit_role_path(@role) %>';

    if(selectedType) {
      BrowserManipulation.changeLocation(url, {
        'role[role_type]': selectedType
      });
    }
  });
});
</script>
