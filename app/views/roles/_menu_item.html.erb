<% unless menu_item.exclude_from_privileges %>
  <% privilege = @role.privileges.detect { |p| p.module == menu_item.menu_name } ||
    @role.privileges.build(:module => menu_item.menu_name) %>
  <%= role_form.simple_fields_for :privileges, privilege do |f| %>
    <% parent_name_attribute = "data-parent=\"#{menu_item.parent.menu_name}\"" if menu_item.parent %>
    <tr id="<%= menu_item.menu_name %>" <%= raw parent_name_attribute %>>
      <td>
        <span class="ps-<%= (menu_item.self_and_ancestors.size - 1) * 2 %><%= ' text-danger' if privilege.errors.size > 0 %>">
          <% if menu_item.parent %>
            <%= menu_item.to_s %>
          <% else %>
            <strong><%= menu_item.to_s %></strong>
          <% end %>
        </span>
        <%= f.input :module, as: :hidden %>
        <%= f.input :id, as: :hidden unless privilege.new_record? %>
      </td>
      <td>
        <%= f.input :read, as: :boolean, label: '&nbsp;'.html_safe, input_html: {
          data: { type: 'read' }
        } %>
      </td>
      <td>
        <%= f.input :modify, as: :boolean, label: '&nbsp;'.html_safe, input_html: {
          data: { type: 'modify' }
        } %>
      </td>
      <td>
        <%= f.input :erase, as: :boolean, label: '&nbsp;'.html_safe, input_html: {
          data: { type: 'erase' }
        } %>
      </td>
      <td>
        <%= f.input :approval, as: :boolean, label: '&nbsp;'.html_safe, input_html: {
          data: { type: 'approval' }
        } %>
      </td>
    </tr>
  <% end %>
  <% menu_item.children.each do |submenu_item| %>
    <%= render 'menu_item', menu_item: submenu_item, role_form: role_form %>
  <% end %>
<% end %>
