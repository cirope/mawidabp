<% readonly = @fortress.final? %>
<% review = @fortress.review || (@fortress.control_objective_item ?
    @fortress.control_objective_item.review : nil) %>
<% frozen = review.try(:is_frozen?) %>
<% show_history_changes = @fortress.status_change_history.size > 1 %>

<%= simple_form_for @fortress do |f| %>
  <% content_for :js_extra do %>
    <%= raw "var lastWorkPaperCode = '#{next_fortress_work_paper_code(
        @fortress)}';" %>
  <% end %>

  <%= f.error_messages %>

  <div class="form-inputs">
    <div class="row">
      <div class="col-md-6">
        <%= f.input :review, label: Review.model_name.human(count: 1),
          input_html: { value: review.try(:identification), readonly: true } %>
        <%= f.input :review_code, input_html: { maxlength: 255, readonly: true } %>
        <div>
          <label for="fortress_control_objective_item">
            <%= raw(ControlObjective.model_name.human +
              show_inline_help_for(:finding_control_objective_item)) %>
          </label>
          <% if !readonly && !@fortress.new_record? %>
            <%= f.input :control_objective_item_id, label: false, input_html: {
              value: @fortress.control_objective_item.try(:control_objective_text),
              class: 'autocomplete_field', title: t('label.search'),
              autocomplete: :off, autofocus: true,
              data: {
                autocomplete_params: ({ review_id: @fortress.review.id } if @fortress.review),
                autocomplete_url: auto_complete_for_control_objective_item_fortresses_path,
                autocomplete_id_target: '#control_objective_item_id'
              }
            } %>
          <% else %>
            <%= f.input :control_objective_name, label: false, input_html: {
              id: :fortress_control_objective_item,
              value: "#{@fortress.control_objective_item.control_objective_text}
                (#{@fortress.control_objective_item.process_control.name})",
              readonly: true } %>
          <% end %>
          <%= f.input :control_objective_item_id, as: :hidden,
            input_html: { id: 'control_objective_item_id' } %>
        </div>
        <%= f.input :description, autofocus: true, input_html: { readonly: readonly } %>
      </div>
      <div class="col-md-6">
        <% if show_history_changes %>
          <%= render 'findings/history_changes', finding: @fortress %>
        <% end %>
        <%= f.input :origination_date, as: :date_picker, label:
            raw(Fortress.human_attribute_name(:origination_date) +
              show_inline_help_for(:finding_origination_date)),
            input_html: { disabled: readonly } %>

        <% if @fortress.must_have_a_comment? %>
          <%= f.simple_fields_for :comments,
            @fortress.comments.build(user: @auth_user) do |c_f| %>
            <%= c_f.input :comment %>
            <%= c_f.input :user_id, as: :hidden %>
          <% end %>
        <% end %>
      </div>
    </div>
  </div>

  <hr />

  <h3>
    <%= t('finding.responsibles', :count => @fortress.users.size) %>
    <%= show_inline_help_for(:finding_responsibles) %>
  </h3>

  <div class="row">
    <div class="col-md-6">
      <h5><strong><%= User.model_name.human %></strong></h5>
    </div>
    <div class="col-md-2">
      <h5><strong><%= raw(FindingUserAssignment.human_attribute_name(:responsible_auditor) +
        show_inline_help_for(:finding_user_assignment_responsible_auditor)) %></strong></h5>
    </div>
    <div class="col-md-2">
      <h5><strong><%= raw(FindingUserAssignment.human_attribute_name(:process_owner) +
        show_inline_help_for(:finding_user_assignment_process_owner)) %></strong></h5>
    </div>
  </div>

  <div id="finding_user_assignments">
    <%= f.simple_fields_for :finding_user_assignments do |fua_f| %>
      <%= render 'findings/finding_user_assignment', f: fua_f, readonly: readonly %>
    <% end %>

    <%= link_to_add_fields(t('finding.add_user'), f,
      :finding_user_assignments, 'findings/finding_user_assignment') unless readonly %>
  </div>

  <hr />

  <h3>
    <%= t('finding.work_papers') %>
    <%= show_inline_help_for(:finding_work_papers) %>
  </h3>

  <div class="row">
    <div class="col-md-3">
      <h5><strong><%= WorkPaper.human_attribute_name :name %></strong></h5>
    </div>
    <div class="col-md-2">
      <h5><strong><%= WorkPaper.human_attribute_name :code %></strong></h5>
    </div>
    <div class="col-md-2">
      <h5><strong><%= WorkPaper.human_attribute_name :number_of_pages %></strong></h5>
    </div>
    <div class="col-md-2">
      <h5><strong><%= WorkPaper.human_attribute_name :description %></strong></h5>
    </div>
    <div class="col-md-2">
      <h5><strong><%= WorkPaper.human_attribute_name :file_model %></strong></h5>
    </div>
  </div>

  <div id="work_papers">
    <%= f.simple_fields_for :work_papers do |wp_f| %>
      <%= render 'work_papers/work_paper', f: wp_f, frozen: frozen %>
    <% end %>

    <%= link_to_add_fields(
      t('finding.add_work_paper'), f, :work_papers, 'work_papers/work_paper'
    ) unless frozen %>
  </div>

  <hr />

  <div class="form-actions form-footer">
    <div class="pull-right"><%= yield :form_actions %></div>
    <%= f.input :lock_version, as: :hidden %>
    <%= f.submit class: 'btn btn-primary', disabled: frozen %>
  </div>
<% end %>
