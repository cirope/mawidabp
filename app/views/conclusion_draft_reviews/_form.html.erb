<!--[form:conclusion_draft_review]-->
<%= form_for @conclusion_draft_review do |f| %>
  <%= f.error_messages %>

  <div class="form_column_left">
    <p class="form_item">
      <% unless @conclusion_draft_review.review %>
        <%= f.label :review_id, nil, :class => :inline %>
        <%= f.select :review_id,
          Review.list_without_draft_review.map { |r| [r.identification, r.id] },
          {:prompt => true}, {:class => 'inline_item focused'} %>
      <% else %>
        <%= f.hidden_field :review_id %>
        <%= content_tag :label,
          ConclusionDraftReview.human_attribute_name('review_id'),
          :class => :inline %>
        <%= text_field_tag :review,
          @conclusion_draft_review.review.identification,
          :class => :inline_item, :readonly => true %>
      <% end %>
    </p>
    <p class="form_item">
      <%= label_tag :business_unit,
        ConclusionReview.human_attribute_name('business_unit'), :class => :inline %>
      <%= text_field_tag :business_unit,
        (@conclusion_draft_review.review.business_unit.name if @conclusion_draft_review.review),
        :class => :inline_item, :readonly => true %>
    </p>
    <p class="form_item">
      <%= label_tag :project, ConclusionReview.human_attribute_name('project'),
        :class => :inline %>
      <%= text_field_tag :project,
        (@conclusion_draft_review.review.plan_item.project if @conclusion_draft_review.review),
        :class => :inline_item, :readonly => true %>
    </p>
    <p>
      <%= f.label :applied_procedures %>
      <%= f.text_area :applied_procedures %>
    </p>
  </div>
  <div class="form_column_right">
    <p>
      <%= f.label :conclusion %>
      <%= f.text_area :conclusion %>
    </p>
    <p class="form_item">
      <%= label_tag :score, Review.human_attribute_name(:score),
        :class => :inline %>
      <%= text_field_tag :score,
        (@conclusion_draft_review.review.score_text if @conclusion_draft_review.review),
        :class => :inline_item, :readonly => true %>
    </p>
    <p class="form_item">
      <%= f.label :issue_date, nil, :class => :inline %>
      <%= f.calendar_date_select :issue_date, :class => :inline_tight_item %>
    </p>
  </div>

  <div id="approval_text">
    <%= content_tag(:div, t(:'conclusion_draft_review.approved'),
      :class => 'green bold', :id => :approved,
      :style => ('display: none;' if !@conclusion_draft_review.approved?)) %>
    <div id="not_approved" <%= raw 'style="display: none;"' if @conclusion_draft_review.approved? %>>
      <p class="red bold">
        <%= t(:'conclusion_draft_review.not_approved') %>
      </p>
      <% @conclusion_draft_review.review.try(:must_be_approved?) %>
      <%= link_to_function t(:'error.show_details'), 'showOrHideErrors()',
          :id => :show_or_hide_link, :style => 'margin-left: .5em;' %>
    </div>
    <div>
      <%= link_to t(:'conclusion_draft_review.check_for_approval'),
        {:action => :check_for_approval},
        {:'data-params' => "$H({id: $F('conclusion_draft_review_review_id')}).toQueryString()",
        :method => :get,
        :'data-condition' => "!$F('conclusion_draft_review_review_id').blank()",
        :remote => true, :style => 'margin-left: 1em;',
        :id => 'check_for_approval'} %>
    </div>
    <% if @conclusion_draft_review.updated_at %>
      <div style="margin-left: 1em;">
        | <%= t(:'conclusion_draft_review.last_verified_date',
          :date => l(@conclusion_draft_review.updated_at, :format => :long)) %>
      </div>
    <% end %>
  </div>
  <div id="approval_errors_detail" style="display: none; clear: both;">
    <div>
      <div id="error_list_container">
        <%= array_to_ul(@conclusion_draft_review.review.try(:approval_errors),
          :id => :error_list, :class => :raw_list) %>
      </div>

      <p id="force_approval_prompt" class="form_item" <%= raw(@conclusion_draft_review.review.try(:can_be_approved_by_force) ? '' : 'style="display: none;"') %>>
        <%= f.label :force_approval, nil, :class => 'inline error_field' %>
        <%= f.check_box :force_approval, :class => :inline_item %>
      </p>
    </div>
  </div>

  <%= hidden_lock_version(f) %>
  
  <p>
    <span class="button"><%= f.submit %></span>
  </p>
<% end %>
<!--[eoform:conclusion_draft_review] -->
<%= set_focus_to_first_element %>
<script type="text/javascript">
  function showOrHideErrors() {
    if($('approval_errors_detail')) {
      Element.showOrHide('approval_errors_detail', {
        afterFinish: function() {
          Element.toggleContent('show_or_hide_link',
            '<%= t(:'error.show_details') %>',
            '<%= t(:'error.hide_details') %>');
        }
      });
    }
  }

  document.on('ajax:success', '#check_for_approval', function(event, element) {
    var request = event.memo;
    
    if(request.responseText.isJSON()) {
      if(request.responseJSON.approved) {
        $('approved').show();
        $('not_approved').hide();

        new Effect.Highlight('approved', {
          duration: 2,
          queue: { position: 'end', scope: 'conclusion_draft_review', limit: 1 }
        });

        $('error_list_container').update('');
        $('force_approval_prompt').hide();
      } else {
        var errorsUl = HTMLUtil.arrayToUL(request.responseJSON.errors,
        {'id': 'error_list', 'class': 'raw_list'});

        if($('approval_errors_detail').visible()) {
          Element.showOrHide('approval_errors_detail');
        }

        $('error_list_container').update(errorsUl);

        $('show_or_hide_link').resetToOriginalText();

        $('approved').hide();
        $('not_approved').show();

        if(request.responseJSON.can_be_approved_by_force) {
          $('force_approval_prompt').show();
        } else {
          $('force_approval_prompt').hide();
        }

        new Effect.Highlight($('not_approved').down('p'), {
          duration: 2,
          queue: { position: 'end', scope: 'conclusion_draft_review', limit: 1 }
        });
      }
    }
  });

  Event.observe('conclusion_draft_review_review_id', 'change', function() {
    var url = '<%= url_for :controller => :reviews, :action => :review_data,
      :id => 'REVIEW_ID', :format => :json %>';

    if($F(this) > 0) {
      new Ajax.Request(url.sub(/REVIEW_ID/, $F(this)), {
        method: 'get',
        onSuccess: function(transport) {
          if(transport.responseText.isJSON()) {
            var reviewData = transport.responseJSON.review;

            $('business_unit').setValue(reviewData.business_unit.name || '');
            $('project').setValue(reviewData.plan_item.project || '');
            $('score').setValue(reviewData.score_text || '');
            $('conclusion_draft_review_applied_procedures').focus();
          }
        },
        onComplete: function() {
          Helper.hideLoading('conclusion_draft_review_review_id');
        },
        onCreate: function() {
          Helper.showLoading('conclusion_draft_review_review_id');
        }
      });
    } else {
      $('business_unit').setValue('');
      $('project').setValue('');
    }

    if($('error_list')) { Element.remove('error_list'); }
  });
</script>