<%= simple_form_for @conclusion_draft_review do |f| %>
  <%= render 'shared/error_explanation', f: f %>

  <div class="form-inputs">
    <div class="row">
      <div class="col-md-6">
        <% if @conclusion_draft_review.review&.persisted? %>
          <%= f.input :review, label: ConclusionDraftReview.human_attribute_name(:review_id),
            input_html: { value: @conclusion_draft_review.review.identification, readonly: true } %>
          <%= f.input :review_id, as: :hidden %>
        <% else %>
          <%= f.input :review_id, collection: Review.list_without_draft_review.map { |r| [truncate(r.long_identification, length: 50), r.id] },
            prompt: true, input_html: { autofocus: true } %>
        <% end %>
        <%= f.input :business_unit, input_html: {
          value: (@conclusion_draft_review.review.business_unit.name if @conclusion_draft_review.review&.persisted?),
          readonly: true } %>
        <%= f.input :project, input_html: {
          value: (@conclusion_draft_review.review.plan_item.project if @conclusion_draft_review.review&.persisted?),
          readonly: true } %>
        <%= f.input :score, label: Review.human_attribute_name(:score), input_html: {
          value: (@conclusion_draft_review.review.score_text if @conclusion_draft_review.review&.persisted?),
          readonly: true } %>
      </div>
      <div class="col-md-6">
        <% if Current.conclusion_pdf_format == 'gal' %>
          <% if SHOW_CONCLUSION_AS_OPTIONS %>
            <%= f.input :conclusion, collection: conclusion_options, prompt: true, input_html: {
              data: {
                corrective_actions_update_url: corrective_actions_update_conclusion_draft_reviews_path
              }
            } %>
          <% else %>
            <%= f.input :conclusion, input_html: { rows: 3 } %>
          <% end %>
          <%= f.input :evolution, collection: EVOLUTION_OPTIONS, prompt: true %>
          <%= f.input :evolution_justification, input_html: { rows: 1 } %>
        <% else %>
          <% if SHOW_CONCLUSION_AS_OPTIONS %>
            <%= f.input :conclusion, collection: conclusion_options, prompt: true %>
          <% else %>
            <%= f.input :conclusion, input_html: { rows: 3 } %>
          <% end %>
          <%= f.input :applied_procedures, input_html: { rows: SHOW_CONCLUSION_AS_OPTIONS ? 4 : 3 } %>
        <% end %>

        <%= f.input :issue_date, as: :date_picker %>
      </div>
    </div>

    <% if Current.conclusion_pdf_format == 'gal' %>
      <div class="row">
        <div class="col-md-6">
          <%= f.input :recipients, input_html: { rows: 4 } %>
        </div>
        <div class="col-md-6">
          <%= f.input :sectors, input_html: { rows: 4 } %>
        </div>
      </div>

      <% if show_review_best_practice_comments? %>
        <div class="row">
          <div class="col-md-6">
            <%= f.input :main_weaknesses_text, input_html: { rows: 4 } %>
          </div>
          <div class="col-md-6">
            <%= f.input :corrective_actions, input_html: { rows: 4 } %>
          </div>
        </div>
      <% end %>

      <div class="row">
        <div class="col-md-6">
          <%= f.input :observations, input_html: { rows: 4 } %>
        </div>
        <div class="col-md-6 toggle-visibility">
          <% if show_review_best_practice_comments? %>
            <%= f.input :affects_compliance, input_html: {
              data: {
                corrective_actions_update_url: corrective_actions_update_conclusion_draft_reviews_path
              }
            } %>
          <% else %>
            <%= f.input :collapse_control_objectives %>
          <% end %>
        </div>
      </div>
    <% elsif Current.conclusion_pdf_format == 'bic' %>
      <div class="row">
        <div class="col-md-6">
          <%= f.input :previous_identification %>
        </div>
        <div class="col-md-6">
          <%= f.input :previous_date, as: :date_picker %>
        </div>
      </div>

      <div class="row">
        <div class="col-md-6">
          <% @conclusion_draft_review.build_review unless @conclusion_draft_review.review %>
          <%= f.simple_fields_for :review do |r_f| %>
            <%= r_f.input :description, input_html: { rows: 4 } %>
            <%= r_f.input :id, as: :hidden %>
          <% end %>
        </div>
        <div class="col-md-6">
          <%= f.input :scope, input_html: { rows: 4 } %>
        </div>
      </div>

      <div class="row">
        <div class="col-md-6">
          <%= f.input :reference, input_html: { rows: 4 } %>
        </div>
        <div class="col-md-6">
          <%= f.input :observations, input_html: { rows: 4 } %>
        </div>
      </div>

      <div class="row">
        <div class="col-md-6">
          <%= f.input :recipients, input_html: { rows: 4 } %>
        </div>
      </div>
    <% end %>

    <% if show_review_best_practice_comments? %>
      <div id="best_practice_comments_container">
        <% if @conclusion_draft_review.review&.persisted? %>
          <%= render 'best_practice_comments', f: f %>
        <% end %>
      </div>
    <% end %>
  </div>

  <div id="approval_text">
    <%= content_tag(:span, t('conclusion_draft_review.approved'),
      :class => 'label label-success', :id => :approved,
      :style => ('display: none;' if !@conclusion_draft_review.approved?)) %>
    <span id="not_approved" <%= raw 'style="display: none;"' if @conclusion_draft_review.approved? %>>
      <span class="label label-danger">
        <%= t('conclusion_draft_review.not_approved') %>
      </span>&nbsp;
      <% @conclusion_draft_review.review.try(:must_be_approved?) %>
      <%= link_to t('error.show_details'), '#', :onclick => 'showOrHideErrors(); return false;',
          :id => :show_or_hide_link %>
    </span> |
    <span>
      <%= link_to t('conclusion_draft_review.check_for_approval'),
        {:action => :check_for_approval, :format => :json}, {:id => 'check_for_approval'} %>
    </span>
    <% if @conclusion_draft_review.updated_at %>
      <span>
        | <%= t('conclusion_draft_review.last_verified_date',
          :date => l(@conclusion_draft_review.updated_at, :format => :long)) %>
      </span>
    <% end %>
  </div>

  <div id="approval_errors_detail" style="display: none;">
    <br />
    <div id="error_list_container">
      <%= array_to_ul(@conclusion_draft_review.review.try(:approval_errors), :id => :error_list) %>
    </div>

    <div id="force_approval_prompt" <%== @conclusion_draft_review.review.try(:can_be_approved_by_force) ? '' : 'style="display: none;"' %>>
      <%= f.input :force_approval, as: :boolean, label: false, inline_label: true %>
    </div>
  </div>

  <hr />

  <div class="form-actions">
    <div class="pull-right"><%= yield :form_actions %></div>
    <%= f.input :lock_version, as: :hidden %>
    <%= f.submit class: 'btn btn-primary' %>
  </div>
<% end %>

<%= render 'bundle' %>

<script type="text/javascript">
  function showOrHideErrors() {
    $('#approval_errors_detail').slideToggle(300, function() {
      $('#show_or_hide_link').mw(
        'toggleContent',
        '<%= t('error.show_details') %>',
        '<%= t('error.hide_details') %>'
      );
    });
  }

  $('#check_for_approval').click(function(event) {
    if(parseInt($('#conclusion_draft_review_review_id').val()) > 0) {
      var url = '<%= url_for({:action => :check_for_approval, :format => :json}) %>';

      $.get(url, { id: $('#conclusion_draft_review_review_id').val() }, function(data) {
        if(data.approved) {
          $('#not_approved').hide();
          $('#approved').show().stop(true, true).effect('highlight', {}, 2000);

          $('#error_list_container').html('');
          $('#force_approval_prompt').hide();
        } else {
          var errorsUl = HTMLUtil.arrayToUL(
            data.errors, {'id': 'error_list' }
          );

          if($('#approval_errors_detail:visible').length > 0) {
            $('#approval_errors_detail').slideToggle(300);
          }

          $('#error_list_container').html(errorsUl);

          $('#show_or_hide_link').mw('resetToOriginalText');

          $('#approved').hide();
          $('#not_approved').show();

          if(data.can_be_approved_by_force) {
            $('#force_approval_prompt').show();
          } else {
            $('#force_approval_prompt').hide();
          }

          $('#not_approved').find('span').stop(true, true).effect('highlight', {}, 2000);
        }
      });
    }

    event.preventDefault();
  });

  $('#conclusion_draft_review_review_id').change(function() {
    var element = $(this);
    var url = '<%= new_conclusion_draft_review_path %>';

    Helper.showLoading(element);

    $.ajax({
      url:      url,
      dataType: 'script',
      data:     { review: element.val() }
    }).done(function() {
      Helper.hideLoading(element);
    });
  });
</script>
